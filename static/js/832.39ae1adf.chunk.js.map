{"version":3,"file":"static/js/832.39ae1adf.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","constants/apiConstants.js","services/api.js"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <>\n      <ThreeDots\n        height=\"100\"\n        width=\"100\"\n        radius=\"9\"\n        color=\"blueviolet\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n        visible={true}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  margin-bottom: 20px;\n`;\n\nexport const SearchInput = styled(Field)`\n  width: 200px;\n  font-size: 20px;\n  border-radius: 5px;\n  border: 0.5px solid black;\n  outline: none;\n  padding: 5px;\n  margin-right: 10px;\n  ::placeholder {\n    font-size: 16px;\n  }\n`;\n\nexport const SearchButton = styled.button`\n  border: 0.5px solid black;\n  border-radius: 5px;\n  padding: 5px;\n  outline: none;\n  font-size: 20px;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  &:hover,\n  :focus,\n  :active {\n    background-color: skyblue;\n    color: white;\n  }\n`;\n","import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { SearchInput, SearchButton, StyledForm } from './SearchForm.styled';\n\nexport function SearchForm({ onSubmit }) {\n  const schema = yup.object().shape({\n    movieName: yup.string().required('This field cannot be empty'),\n  });\n\n  const handleSubmit = (values, { resetForm }) => {\n    onSubmit(values);\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{ movieName: '' }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm>\n          <SearchInput\n            name=\"movieName\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n          />\n          <SearchButton type=\"submit\">Search</SearchButton>\n        </StyledForm>\n      </Formik>\n    </>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieListItem = styled.li`\n  list-style: inside;\n  text-decoration: none;\n  margin-bottom: 5px;\n`;\n\nexport const MovieListLink = styled(Link)`\n  text-decoration: none;\n  font-size: 18px;\n  color: black;\n  &:hover {\n    color: blueviolet;\n  }\n`;\n","import { MovieListItem, MovieListLink } from './MovieList.styled';\n\nexport function MovieList({ movies, location }) {\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <MovieListItem key={id}>\n          <MovieListLink to={`${id}`} state={{ from: location }}>\n            {title}\n          </MovieListLink>\n        </MovieListItem>\n      ))}\n    </ul>\n  );\n}\n","import styled from 'styled-components';\n\nexport const MovieWrapper = styled.div`\n  margin-top: 15px;\n  padding: 15px;\n`;\n","import { SearchForm } from 'components/SearchForm';\nimport { useState, useEffect } from 'react';\nimport { getMoviesByName } from '../../services/api';\nimport { MovieList } from '../../components/MovieList/index';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { MovieWrapper } from './Movies.styled';\nimport { toast } from 'react-toastify';\nimport { Loader } from '../../components/Loader/index';\n\nfunction Movies() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const name = searchParams.get('movieName') ?? '';\n\n  useEffect(() => {\n    if (name === '' || name === null) return;\n    async function moviesByName() {\n      try {\n        const response = await getMoviesByName(name);\n        setMovies(response);\n        setIsLoading(false);\n        if (response.length === 0) {\n          toast.error(`Sorry, there are no movies for this request.`);\n        }\n      } catch (error) {\n        toast.error('Oops! Something went wrong!');\n      }\n    }\n    if (name) {\n      moviesByName();\n      setIsLoading(true);\n    }\n  }, [name]);\n\n  const handleMovieNameSubmit = name => {\n    if (name) {\n      setSearchParams(name);\n    }\n  };\n\n  return (\n    <MovieWrapper>\n      <SearchForm onSubmit={handleMovieNameSubmit} />\n      {isLoading && <Loader />}\n      {movies && <MovieList movies={movies} location={location} />}\n    </MovieWrapper>\n  );\n}\n\nexport default Movies;\n","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '644038bd8c4d79d1d14f251b1d12234c';\n","import axios from 'axios';\nimport { BASE_URL, API_KEY } from '../constants/apiConstants';\n\nexport async function getPopularMovies() {\n  const response = await axios.get(`${BASE_URL}/trending/movie/day?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function getMoviesByName(movieName) {\n  const response = await axios.get(`${BASE_URL}/search/movie?`, {\n    params: {\n      query: movieName,\n      page: 1,\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data.results;\n}\n\nexport async function getMoviesById(id) {\n  const response = await axios.get(`${BASE_URL}/movie/${id}?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport function getMovieCredits(id) {\n  const response = axios.get(`${BASE_URL}/movie/${id}/credits?`, {\n    params: { api_key: API_KEY },\n  });\n  return response;\n}\n\nexport function getMovieReviews(id) {\n  const response = axios.get(`${BASE_URL}/movie/${id}/reviews?`, {\n    params: { api_key: API_KEY },\n  });\n  return response;\n}\n"],"names":["Loader","height","width","radius","color","ariaLabel","wrapperStyle","display","justifyContent","visible","StyledForm","styled","Form","SearchInput","Field","SearchButton","SearchForm","onSubmit","schema","yup","shape","movieName","required","initialValues","validationSchema","values","resetForm","name","type","autoComplete","autoFocus","placeholder","MovieListItem","MovieListLink","Link","MovieList","movies","location","map","id","title","to","state","from","MovieWrapper","useState","setMovies","isLoading","setIsLoading","useLocation","useSearchParams","searchParams","setSearchParams","get","useEffect","getMoviesByName","response","length","toast","moviesByName","BASE_URL","API_KEY","getPopularMovies","axios","params","api_key","data","results","query","page","language","getMoviesById","getMovieCredits","getMovieReviews"],"sourceRoot":""}