{"version":3,"file":"static/js/727.8b23e6c3.chunk.js","mappings":"8LAEaA,EAAS,WACpB,OACE,+BACE,SAAC,KAAD,CACEC,OAAO,MACPC,MAAM,MACNC,OAAO,IACPC,MAAM,aACNC,UAAU,qBACVC,aAAc,CACZC,QAAS,OACTC,eAAgB,UAElBC,SAAS,Q,0LCbJC,EAAcC,EAAAA,GAAAA,GAAH,kJASXC,EAAcD,EAAAA,GAAAA,GAAH,4JAQXE,EAAeF,EAAAA,GAAAA,IAAH,oKASZG,EAAYH,EAAAA,GAAAA,IAAH,gJAOTI,EAAcJ,EAAAA,GAAAA,EAAH,4J,mBC2BxB,MAhDA,WACE,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEMC,EAAAA,EAAAA,IAAgBT,GAFtB,OAEXU,EAFW,OAGjBN,EAAWM,EAASC,KAAKC,MACzBN,GAAa,GAJI,gDAMjBO,EAAAA,GAAAA,MAAY,+BANK,yDAAH,qDASlBL,IACAF,GAAa,KACZ,CAACN,KAGF,gCACGK,IAAa,SAACrB,EAAA,EAAD,IACbmB,EAAQW,OAAS,GAChB,SAACpB,EAAD,UACGS,EAAQY,MAAM,EAAG,IAAIC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACxB,UAACxB,EAAD,WACGuB,GACC,SAACtB,EAAD,CACEwB,IAAG,yCAAoCF,GACvCG,IAAKJ,KAGP,SAACpB,EAAD,CAAWuB,IAAKE,EAAYD,IAAI,gBAElC,4BACE,wBAAKJ,KACL,uCAAeE,UAXDH,SAiBtB,SAAClB,EAAD,4D,0MCxDKyB,EAAW,+BACXC,EAAU,mCCEhB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAAA,IAAA,UAAaH,EAAb,wBAA6C,CAClEI,OAAQ,CACNC,QAASJ,KAHR,cACCf,EADD,yBAMEA,EAASC,KAAKmB,SANhB,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBL,IAAAA,IAAA,UAAaH,EAAb,kBAAuC,CAC5DI,OAAQ,CACNK,MAAOD,EACPE,KAAM,EACNL,QAASJ,EACTU,SAAU,WANT,cACCzB,EADD,yBASEA,EAASC,KAAKmB,SAThB,kEAYA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA6BnB,GAA7B,uFACkBU,IAAAA,IAAA,UAAaH,EAAb,kBAA+BP,EAA/B,KAAsC,CAC3DW,OAAQ,CACNC,QAASJ,KAHR,cACCf,EADD,yBAMEA,EAASC,MANX,kEASA,SAASF,EAAgBQ,GAI9B,OAHiBU,IAAAA,IAAA,UAAaH,EAAb,kBAA+BP,EAA/B,aAA8C,CAC7DW,OAAQ,CAAEC,QAASJ,KAKhB,SAASY,EAAgBpB,GAI9B,OAHiBU,IAAAA,IAAA,UAAaH,EAAb,kBAA+BP,EAA/B,aAA8C,CAC7DW,OAAQ,CAAEC,QAASJ,O","sources":["components/Loader/Loader.jsx","components/MovieCredits/MovieCredits.styled.js","components/MovieCredits/MovieCredits.jsx","constants/apiConstants.js","services/api.js"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <>\n      <ThreeDots\n        height=\"100\"\n        width=\"100\"\n        radius=\"9\"\n        color=\"blueviolet\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n        visible={true}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const CreditsList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: auto;\n  margin-left: auto;\n  margin: -25px;\n`;\n\nexport const CreditsItem = styled.li`\n  display: block;\n  border-bottom: 1px solid black;\n  margin-bottom: 0;\n  flex-basis: calc((100% / 5) - 50px);\n  margin: 25px;\n`;\n\nexport const CreditsImage = styled.img`\n  width: 280px;\n  height: auto;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const ActorPlug = styled.img`\n  margin-bottom: 140px;\n  width: 280px;\n  height: auto;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const CreditsPlug = styled.p`\n  display: flex;\n  justify-content: center;\n  font-size: 24px;\n  font-weight: 600;\n  margin-right: auto;\n  margin-left: auto;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieCredits } from '../../services/api';\nimport { toast } from 'react-toastify';\nimport { Loader } from '../../components/Loader/index';\nimport {\n  CreditsList,\n  CreditsImage,\n  CreditsItem,\n  ActorPlug,\n  CreditsPlug,\n} from './MovieCredits.styled';\nimport actor_plug from '../../img/actor_plug.jpg';\n\nfunction MovieCredits() {\n  const { movieId } = useParams();\n  const [credits, setCredits] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const movieCredits = async () => {\n      try {\n        const response = await getMovieCredits(movieId);\n        setCredits(response.data.cast);\n        setIsLoading(false);\n      } catch (error) {\n        toast.error('Oops! Something went wrong!');\n      }\n    };\n    movieCredits();\n    setIsLoading(true);\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {credits.length > 0 ? (\n        <CreditsList>\n          {credits.slice(0, 20).map(({ id, name, profile_path, character }) => (\n            <CreditsItem key={id}>\n              {profile_path ? (\n                <CreditsImage\n                  src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                  alt={name}\n                />\n              ) : (\n                <ActorPlug src={actor_plug} alt=\"Actor Plug\" />\n              )}\n              <div>\n                <h3>{name}</h3>\n                <p>Character: {character}</p>\n              </div>\n            </CreditsItem>\n          ))}\n        </CreditsList>\n      ) : (\n        <CreditsPlug> We don't have any cast for this movie. </CreditsPlug>\n      )}\n    </>\n  );\n}\n\nexport default MovieCredits;\n","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '644038bd8c4d79d1d14f251b1d12234c';\n","import axios from 'axios';\nimport { BASE_URL, API_KEY } from '../constants/apiConstants';\n\nexport async function getPopularMovies() {\n  const response = await axios.get(`${BASE_URL}/trending/movie/day?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function getMoviesByName(movieName) {\n  const response = await axios.get(`${BASE_URL}/search/movie?`, {\n    params: {\n      query: movieName,\n      page: 1,\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data.results;\n}\n\nexport async function getMoviesById(id) {\n  const response = await axios.get(`${BASE_URL}/movie/${id}?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport function getMovieCredits(id) {\n  const response = axios.get(`${BASE_URL}/movie/${id}/credits?`, {\n    params: { api_key: API_KEY },\n  });\n  return response;\n}\n\nexport function getMovieReviews(id) {\n  const response = axios.get(`${BASE_URL}/movie/${id}/reviews?`, {\n    params: { api_key: API_KEY },\n  });\n  return response;\n}\n"],"names":["Loader","height","width","radius","color","ariaLabel","wrapperStyle","display","justifyContent","visible","CreditsList","styled","CreditsItem","CreditsImage","ActorPlug","CreditsPlug","movieId","useParams","useState","credits","setCredits","isLoading","setIsLoading","useEffect","movieCredits","getMovieCredits","response","data","cast","toast","length","slice","map","id","name","profile_path","character","src","alt","actor_plug","BASE_URL","API_KEY","getPopularMovies","axios","params","api_key","results","getMoviesByName","movieName","query","page","language","getMoviesById","getMovieReviews"],"sourceRoot":""}