{"version":3,"file":"static/js/304.e6c646f1.chunk.js","mappings":"8LAEaA,EAAS,WACpB,OACE,+BACE,SAAC,KAAD,CACEC,OAAO,MACPC,MAAM,MACNC,OAAO,IACPC,MAAM,aACNC,UAAU,qBACVC,aAAc,CACZC,QAAS,OACTC,eAAgB,UAElBC,SAAS,Q,0FCZJC,EAAgBC,EAAAA,GAAAA,GAAH,gGAMbC,GAAgBD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,iI,SCPnB,SAASG,EAAT,GAA0C,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,SAClC,OACE,wBACGD,EAAOE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,SAACT,EAAD,WACE,SAACE,EAAD,CAAeQ,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMN,GAAnD,SACGG,KAFeD,U,wLCHfK,EAAQZ,EAAAA,GAAAA,GAAH,iEAoBLa,GAfWb,EAAAA,GAAAA,GAAH,iGAMKA,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,iIASMA,EAAAA,GAAAA,IAAH,2C,uCCmB1B,MAjCA,WACE,OAA4Bc,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACMZ,GAAWa,EAAAA,EAAAA,MAgBjB,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAESC,EAAAA,EAAAA,MAFT,OAERC,EAFQ,OAGdP,EAAUO,GACVL,GAAa,GAJC,gDAMdM,EAAAA,GAAAA,MAAY,+BANE,yDAAH,qDASfH,IACAH,GAAa,KACZ,KAGD,UAACO,EAAA,EAAD,YACE,SAACZ,EAAD,6BACCI,GACC,SAACH,EAAD,WACE,SAACxB,EAAA,EAAD,MAGFe,IAAU,SAACD,EAAA,EAAD,CAAWC,OAAQA,EAAQC,SAAUA,S,iMCjCjDoB,E,MAAWC,GAAAA,OAAa,CAC5BC,QCJsB,+BDKtBC,SAAU,QACVC,OAAQ,CACNC,QCNmB,sCDUhB,SAAeT,IAAtB,4CAAO,OAAP,oBAAO,oGACkBI,EAASM,IAAT,uBADlB,cACCT,EADD,yBAEEA,EAASU,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBV,EAASM,IAAT,gBAA8B,CACnDF,OAAQ,CACNM,MAAAA,KAHC,cACCb,EADD,yBAMEA,EAASU,KAAKC,SANhB,kEASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA6B7B,GAA7B,uFACkBkB,EAASM,IAAT,iBAAuBxB,IADzC,cACCe,EADD,yBAEEA,EAASU,MAFX,kEAKA,SAASK,EAAgB9B,GAE9B,OADiBkB,EAASM,IAAT,iBAAuBxB,EAAvB,aAIZ,SAAS+B,EAAgB/B,GAE9B,OADiBkB,EAASM,IAAT,iBAAuBxB,EAAvB","sources":["components/Loader/Loader.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","services/api.js","constants/apiConstants.js"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <>\n      <ThreeDots\n        height=\"100\"\n        width=\"100\"\n        radius=\"9\"\n        color=\"blueviolet\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n        visible={true}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieListItem = styled.li`\n  list-style: inside;\n  text-decoration: none;\n  margin-bottom: 5px;\n`;\n\nexport const MovieListLink = styled(Link)`\n  text-decoration: none;\n  font-size: 18px;\n  color: black;\n  &:hover {\n    color: blueviolet;\n  }\n`;\n","import { MovieListItem, MovieListLink } from './MovieList.styled';\n\nexport function MovieList({ movies, location }) {\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <MovieListItem key={id}>\n          <MovieListLink to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </MovieListLink>\n        </MovieListItem>\n      ))}\n    </ul>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Title = styled.h2`\n  font-size: 30px;\n  font-weight: 600;\n`;\n\nexport const ListItem = styled.li`\n  list-style: inside;\n  text-decoration: none;\n  margin-bottom: 5px;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  font-size: 18px;\n  color: black;\n  &:hover {\n    color: blueviolet;\n  }\n`;\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n`;\n","import { useState, useEffect } from 'react';\nimport { getPopularMovies } from '../../services/api';\nimport { useLocation } from 'react-router-dom';\nimport { Container } from 'Layout/common/Container';\nimport { Title, LoaderWrapper } from './Home.styled';\nimport { toast } from 'react-toastify';\nimport { Loader } from '../../components/Loader/index';\nimport { MovieList } from '../../components/MovieList/MovieList';\n\nfunction Home() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        const response = await getPopularMovies();\n        setMovies(response);\n        setIsLoading(false);\n      } catch (error) {\n        toast.error('Oops! Something went wrong!');\n      }\n    };\n    getMovies();\n    setIsLoading(true);\n  }, []);\n\n  return (\n    <Container>\n      <Title>Trending today</Title>\n      {isLoading ? (\n        <LoaderWrapper>\n          <Loader />\n        </LoaderWrapper>\n      ) : (\n        movies && <MovieList movies={movies} location={location} />\n      )}\n    </Container>\n  );\n}\n\nexport default Home;\n","import axios from 'axios';\nimport { BASE_URL, API_KEY } from '../constants/apiConstants';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  language: 'en-US',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport async function getPopularMovies() {\n  const response = await instance.get(`/trending/movie/day`);\n  return response.data.results;\n}\n\nexport async function getMoviesByName(query) {\n  const response = await instance.get(`/search/movie`, {\n    params: {\n      query,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function getMoviesById(id) {\n  const response = await instance.get(`/movie/${id}`);\n  return response.data;\n}\n\nexport function getMovieCredits(id) {\n  const response = instance.get(`/movie/${id}/credits`);\n  return response;\n}\n\nexport function getMovieReviews(id) {\n  const response = instance.get(`/movie/${id}/reviews`);\n  return response;\n}\n","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '644038bd8c4d79d1d14f251b1d12234c';\n"],"names":["Loader","height","width","radius","color","ariaLabel","wrapperStyle","display","justifyContent","visible","MovieListItem","styled","MovieListLink","Link","MovieList","movies","location","map","id","title","to","state","from","Title","LoaderWrapper","useState","setMovies","isLoading","setIsLoading","useLocation","useEffect","getMovies","getPopularMovies","response","toast","Container","instance","axios","baseURL","language","params","api_key","get","data","results","getMoviesByName","query","getMoviesById","getMovieCredits","getMovieReviews"],"sourceRoot":""}