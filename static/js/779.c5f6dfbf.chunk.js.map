{"version":3,"file":"static/js/779.c5f6dfbf.chunk.js","mappings":"8LAEaA,EAAS,WACpB,OACE,+BACE,SAAC,KAAD,CACEC,OAAO,MACPC,MAAM,MACNC,OAAO,IACPC,MAAM,aACNC,UAAU,qBACVC,aAAc,CACZC,QAAS,OACTC,eAAgB,UAElBC,SAAS,Q,+JCbJC,E,QAAaC,GAAAA,EAAH,4J,mBC2CvB,MAtCA,WACE,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEMC,EAAAA,EAAAA,IAAgBT,GAFtB,OAEXU,EAFW,OAGjBN,EAAWM,EAASC,KAAKC,SACzBN,GAAa,GAJI,gDAMjBO,EAAAA,GAAAA,MAAY,+BANK,yDAAH,qDASlBL,IACAF,GAAa,KACZ,CAACN,KAGF,gCACGK,IAAa,SAACjB,EAAA,EAAD,KACd,wBACGe,EAAQW,OAAS,EAChBX,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,OAMX,SAAClB,EAAD,iE,0MCtCGqB,EAAW,+BACXC,EAAU,mCCEhB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAAA,IAAA,UAAaH,EAAb,wBAA6C,CAClEI,OAAQ,CACNC,QAASJ,KAHR,cACCV,EADD,yBAMEA,EAASC,KAAKC,SANhB,kEASA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBJ,IAAAA,IAAA,UAAaH,EAAb,kBAAuC,CAC5DI,OAAQ,CACNI,MAAOD,EACPE,KAAM,EACNJ,QAASJ,EACTS,SAAU,WANT,cACCnB,EADD,yBASEA,EAASC,KAAKC,SAThB,kEAYA,SAAekB,EAAtB,+CAAO,OAAP,oBAAO,WAA6Bd,GAA7B,uFACkBM,IAAAA,IAAA,UAAaH,EAAb,kBAA+BH,EAA/B,KAAsC,CAC3DO,OAAQ,CACNC,QAASJ,KAHR,cACCV,EADD,yBAMEA,EAASC,MANX,kEASA,SAASoB,EAAgBf,GAI9B,OAHiBM,IAAAA,IAAA,UAAaH,EAAb,kBAA+BH,EAA/B,aAA8C,CAC7DO,OAAQ,CAAEC,QAASJ,KAKhB,SAASX,EAAgBO,GAI9B,OAHiBM,IAAAA,IAAA,UAAaH,EAAb,kBAA+BH,EAA/B,aAA8C,CAC7DO,OAAQ,CAAEC,QAASJ","sources":["components/Loader/Loader.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","constants/apiConstants.js","services/api.js"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <>\n      <ThreeDots\n        height=\"100\"\n        width=\"100\"\n        radius=\"9\"\n        color=\"blueviolet\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n        visible={true}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ReviewPlug = styled.p`\n  display: flex;\n  justify-content: center;\n  font-size: 24px;\n  font-weight: 600;\n  margin-right: auto;\n  margin-left: auto;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../../services/api';\nimport { toast } from 'react-toastify';\nimport { ReviewPlug } from './Reviews.styled';\nimport { Loader } from '../../components/Loader/index';\n\nfunction Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const movieReviews = async () => {\n      try {\n        const response = await getMovieReviews(movieId);\n        setReviews(response.data.results);\n        setIsLoading(false);\n      } catch (error) {\n        toast.error('Oops! Something went wrong!');\n      }\n    };\n    movieReviews();\n    setIsLoading(true);\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <ul>\n        {reviews.length > 0 ? (\n          reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3>Author: {author}</h3>\n              <p>{content}</p>\n            </li>\n          ))\n        ) : (\n          <ReviewPlug> We don't have any reviews for this movie. </ReviewPlug>\n        )}\n      </ul>\n    </>\n  );\n}\n\nexport default Reviews;\n","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '644038bd8c4d79d1d14f251b1d12234c';\n","import axios from 'axios';\nimport { BASE_URL, API_KEY } from '../constants/apiConstants';\n\nexport async function getPopularMovies() {\n  const response = await axios.get(`${BASE_URL}/trending/movie/day?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function getMoviesByName(movieName) {\n  const response = await axios.get(`${BASE_URL}/search/movie?`, {\n    params: {\n      query: movieName,\n      page: 1,\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data.results;\n}\n\nexport async function getMoviesById(id) {\n  const response = await axios.get(`${BASE_URL}/movie/${id}?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport function getMovieCredits(id) {\n  const response = axios.get(`${BASE_URL}/movie/${id}/credits?`, {\n    params: { api_key: API_KEY },\n  });\n  return response;\n}\n\nexport function getMovieReviews(id) {\n  const response = axios.get(`${BASE_URL}/movie/${id}/reviews?`, {\n    params: { api_key: API_KEY },\n  });\n  return response;\n}\n"],"names":["Loader","height","width","radius","color","ariaLabel","wrapperStyle","display","justifyContent","visible","ReviewPlug","styled","movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","useEffect","movieReviews","getMovieReviews","response","data","results","toast","length","map","id","author","content","BASE_URL","API_KEY","getPopularMovies","axios","params","api_key","getMoviesByName","movieName","query","page","language","getMoviesById","getMovieCredits"],"sourceRoot":""}