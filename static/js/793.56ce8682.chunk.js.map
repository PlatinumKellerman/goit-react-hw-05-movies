{"version":3,"file":"static/js/793.56ce8682.chunk.js","mappings":"8LAEaA,EAAS,WACpB,OACE,+BACE,SAAC,KAAD,CACEC,OAAO,MACPC,MAAM,MACNC,OAAO,IACPC,MAAM,aACNC,UAAU,qBACVC,aAAc,CACZC,QAAS,OACTC,eAAgB,UAElBC,SAAS,Q,2LCbJC,EAAcC,EAAAA,GAAAA,EAAH,4JCAXC,EAAcD,EAAAA,GAAAA,GAAH,kJASXE,EAAcF,EAAAA,GAAAA,GAAH,4JAQXG,EAAeH,EAAAA,GAAAA,IAAH,oKASZI,EAAYJ,EAAAA,GAAAA,IAAH,gJ,mBCpBf,SAASK,EAAT,GAAgC,IAAZC,EAAW,EAAXA,QACzB,OACE,SAACL,EAAD,UACGK,EAAQC,MAAM,EAAG,IAAIC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACxB,UAACV,EAAD,WACGS,GACC,SAACR,EAAD,CACEU,IAAG,yCAAoCF,GACvCG,IAAKJ,KAGP,SAACN,EAAD,CAAWS,IAAKE,EAAYD,IAAI,gBAElC,4BACE,wBAAKJ,KACL,uCAAeE,UAXDH,QC2B1B,MA/BA,WACE,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOZ,EAAP,KAAgBa,EAAhB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEMC,EAAAA,EAAAA,IAAgBR,GAFtB,OAEXS,EAFW,OAGjBN,EAAWM,EAASC,KAAKC,MACzBN,GAAa,GAJI,gDAMjBO,EAAAA,GAAAA,MAAY,+BANK,yDAAH,qDASlBL,IACAF,GAAa,KACZ,CAACL,KAGF,gCACGI,IAAa,SAAC/B,EAAA,EAAD,IACbiB,EAAQuB,OAAS,GAChB,SAACxB,EAAD,CAAUC,QAASA,KAEnB,SAACP,EAAD,4D,iMC9BF+B,E,MAAWC,GAAAA,OAAa,CAC5BC,QCJsB,+BDKtBC,SAAU,QACVC,OAAQ,CACNC,QCNmB,sCDUhB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBN,EAASO,IAAT,uBADlB,cACCZ,EADD,yBAEEA,EAASC,KAAKY,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBV,EAASO,IAAT,gBAA8B,CACnDH,OAAQ,CACNM,MAAAA,KAHC,cACCf,EADD,yBAMEA,EAASC,KAAKY,SANhB,kEASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA6BhC,GAA7B,uFACkBqB,EAASO,IAAT,iBAAuB5B,IADzC,cACCgB,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAASF,EAAgBf,GAE9B,OADiBqB,EAASO,IAAT,iBAAuB5B,EAAvB,aAIZ,SAASiC,EAAgBjC,GAE9B,OADiBqB,EAASO,IAAT,iBAAuB5B,EAAvB,e","sources":["components/Loader/Loader.jsx","pages/MovieDetails/Cast/Cast.styled.js","components/CastList/CastList.styled.js","components/CastList/CastList.jsx","pages/MovieDetails/Cast/Cast.jsx","services/api.js","constants/apiConstants.js"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <>\n      <ThreeDots\n        height=\"100\"\n        width=\"100\"\n        radius=\"9\"\n        color=\"blueviolet\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n        visible={true}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const CreditsPlug = styled.p`\n  display: flex;\n  justify-content: center;\n  font-size: 24px;\n  font-weight: 600;\n  margin-right: auto;\n  margin-left: auto;\n`;\n","import styled from 'styled-components';\n\nexport const CreditsList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: auto;\n  margin-left: auto;\n  margin: -25px;\n`;\n\nexport const CreditsItem = styled.li`\n  display: block;\n  border-bottom: 1px solid black;\n  margin-bottom: 0;\n  flex-basis: calc((100% / 5) - 50px);\n  margin: 25px;\n`;\n\nexport const CreditsImage = styled.img`\n  width: 280px;\n  height: auto;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const ActorPlug = styled.img`\n  margin-bottom: 140px;\n  width: 280px;\n  height: auto;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n","import {\n  CreditsList,\n  CreditsItem,\n  CreditsImage,\n  ActorPlug,\n} from './CastList.styled';\nimport actor_plug from '../../img/actor_plug.jpg';\n\nexport function CastList({ credits }) {\n  return (\n    <CreditsList>\n      {credits.slice(0, 20).map(({ id, name, profile_path, character }) => (\n        <CreditsItem key={id}>\n          {profile_path ? (\n            <CreditsImage\n              src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n              alt={name}\n            />\n          ) : (\n            <ActorPlug src={actor_plug} alt=\"Actor Plug\" />\n          )}\n          <div>\n            <h3>{name}</h3>\n            <p>Character: {character}</p>\n          </div>\n        </CreditsItem>\n      ))}\n    </CreditsList>\n  );\n}\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieCredits } from '../../../services/api';\nimport { toast } from 'react-toastify';\nimport { Loader } from '../../../components/Loader/index';\nimport { CreditsPlug } from './Cast.styled';\nimport { CastList } from '../../../components/CastList/CastList';\n\nfunction Cast() {\n  const { movieId } = useParams();\n  const [credits, setCredits] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const movieCredits = async () => {\n      try {\n        const response = await getMovieCredits(movieId);\n        setCredits(response.data.cast);\n        setIsLoading(false);\n      } catch (error) {\n        toast.error('Oops! Something went wrong!');\n      }\n    };\n    movieCredits();\n    setIsLoading(true);\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {credits.length > 0 ? (\n        <CastList credits={credits}></CastList>\n      ) : (\n        <CreditsPlug> We don't have any cast for this movie. </CreditsPlug>\n      )}\n    </>\n  );\n}\n\nexport default Cast;\n","import axios from 'axios';\nimport { BASE_URL, API_KEY } from '../constants/apiConstants';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  language: 'en-US',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport async function getPopularMovies() {\n  const response = await instance.get(`/trending/movie/day`);\n  return response.data.results;\n}\n\nexport async function getMoviesByName(query) {\n  const response = await instance.get(`/search/movie`, {\n    params: {\n      query,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function getMoviesById(id) {\n  const response = await instance.get(`/movie/${id}`);\n  return response.data;\n}\n\nexport function getMovieCredits(id) {\n  const response = instance.get(`/movie/${id}/credits`);\n  return response;\n}\n\nexport function getMovieReviews(id) {\n  const response = instance.get(`/movie/${id}/reviews`);\n  return response;\n}\n","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '644038bd8c4d79d1d14f251b1d12234c';\n"],"names":["Loader","height","width","radius","color","ariaLabel","wrapperStyle","display","justifyContent","visible","CreditsPlug","styled","CreditsList","CreditsItem","CreditsImage","ActorPlug","CastList","credits","slice","map","id","name","profile_path","character","src","alt","actor_plug","movieId","useParams","useState","setCredits","isLoading","setIsLoading","useEffect","movieCredits","getMovieCredits","response","data","cast","toast","length","instance","axios","baseURL","language","params","api_key","getPopularMovies","get","results","getMoviesByName","query","getMoviesById","getMovieReviews"],"sourceRoot":""}